

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 04 19:16:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378                           
   379                           	psect	strings
   380     0003                     __pstrings:
   381     0003                     stringtab:
   382     0003                     __stringtab:
   383                           
   384                           ;	String table - string pointers are 1 byte each
   385     0003  1BFF               	btfsc	btemp+1,7
   386     0004  280D               	ljmp	stringcode
   387     0005  1383               	bcf	3,7
   388     0006  187F               	btfsc	btemp+1,0
   389     0007  1783               	bsf	3,7
   390     0008  0800               	movf	0,w
   391     0009  0A84               	incf	4,f
   392     000A  1903               	skipnz
   393     000B  0AFF               	incf	btemp+1,f
   394     000C  0008               	return
   395     000D                     stringcode:
   396     000D                     stringdir:
   397     000D  3000               	movlw	high stringdir
   398     000E  008A               	movwf	10
   399     000F  0804               	movf	4,w
   400     0010  0A84               	incf	4,f
   401     0011  0782               	addwf	2,f
   402     0012                     __stringbase:
   403     0012  3400               	retlw	0
   404     0013                     __end_of__stringtab:
   405     0013                     _dpowers:
   406     0013  3401               	retlw	1
   407     0014  3400               	retlw	0
   408     0015  340A               	retlw	10
   409     0016  3400               	retlw	0
   410     0017  3464               	retlw	100
   411     0018  3400               	retlw	0
   412     0019  34E8               	retlw	232
   413     001A  3403               	retlw	3
   414     001B  3410               	retlw	16
   415     001C  3427               	retlw	39
   416     001D                     __end_of_dpowers:
   417     0009                     _PORTEbits	set	9
   418     0009                     _PORTE	set	9
   419     0008                     _PORTD	set	8
   420     0006                     _PORTB	set	6
   421     0007                     _PORTCbits	set	7
   422     0013                     _SSPBUF	set	19
   423     0014                     _SSPCON	set	20
   424     008F                     _OSCCONbits	set	143
   425     0085                     _TRISA	set	133
   426     0088                     _TRISD	set	136
   427     0086                     _TRISB	set	134
   428     0089                     _TRISE	set	137
   429     0087                     _TRISCbits	set	135
   430     0094                     _SSPSTATbits	set	148
   431     0094                     _SSPSTAT	set	148
   432     043B                     _TRISC3	set	1083
   433     043D                     _TRISC5	set	1085
   434     0189                     _ANSELH	set	393
   435     0188                     _ANSEL	set	392
   436     001D                     STR_6:
   437     001D  3443               	retlw	67	;'C'
   438     001E  344F               	retlw	79	;'O'
   439     001F  344E               	retlw	78	;'N'
   440     0020  3454               	retlw	84	;'T'
   441     0021  3432               	retlw	50	;'2'
   442     0022  3400               	retlw	0
   443     0023                     STR_4:
   444     0023  3441               	retlw	65	;'A'
   445     0024  3444               	retlw	68	;'D'
   446     0025  3443               	retlw	67	;'C'
   447     0026  3431               	retlw	49	;'1'
   448     0027  3400               	retlw	0
   449     0028                     STR_5:
   450     0028  3441               	retlw	65	;'A'
   451     0029  3444               	retlw	68	;'D'
   452     002A  3443               	retlw	67	;'C'
   453     002B  3432               	retlw	50	;'2'
   454     002C  3400               	retlw	0
   455     002D                     STR_1:
   456     002D  3425               	retlw	37	;'%'
   457     002E  3464               	retlw	100	;'d'
   458     002F  3400               	retlw	0
   459     002D                     
   460                           	psect	cinit
   461     07EB                     start_initialization:	
   462                           ; #config settings
   463                           
   464     07EB                     __initialization:
   465                           
   466                           ; Clear objects allocated to BANK0
   467     07EB  1383               	bcf	3,7	;select IRP bank0
   468     07EC  3020               	movlw	low __pbssBANK0
   469     07ED  0084               	movwf	4
   470     07EE  304F               	movlw	low (__pbssBANK0+47)
   471     07EF  120A  118A  2402  120A  118A  	fcall	clear_ram0
   472                           
   473                           ; Clear objects allocated to BANK1
   474     07F4  30A0               	movlw	low __pbssBANK1
   475     07F5  0084               	movwf	4
   476     07F6  30AF               	movlw	low (__pbssBANK1+15)
   477     07F7  120A  118A  2402  120A  118A  	fcall	clear_ram0
   478     07FC                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481     07FC                     __end_of__initialization:
   482     07FC  0183               	clrf	3
   483     07FD  120A  118A  2E92   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK0
   486     0020                     __pbssBANK0:
   487     0020                     _numero:
   488     0020                     	ds	2
   489     0022                     _charesc22:
   490     0022                     	ds	15
   491     0031                     _charesc2:
   492     0031                     	ds	15
   493     0040                     _charesc1:
   494     0040                     	ds	15
   495                           
   496                           	psect	bssBANK1
   497     00A0                     __pbssBANK1:
   498     00A0                     _CVPOT:
   499     00A0                     	ds	15
   500                           
   501                           	psect	clrtext
   502     0402                     clear_ram0:	
   503                           ;	Called with FSR containing the base address, and
   504                           ;	W with the last address+1
   505                           
   506     0402  0064               	clrwdt	;clear the watchdog before getting into this loop
   507     0403                     clrloop0:
   508     0403  0180               	clrf	0	;clear RAM location pointed to by FSR
   509     0404  0A84               	incf	4,f	;increment pointer
   510     0405  0604               	xorwf	4,w	;XOR with final address
   511     0406  1903               	btfsc	3,2	;have we reached the end yet?
   512     0407  3400               	retlw	0	;all done for this memory range, return
   513     0408  0604               	xorwf	4,w	;XOR again to restore value
   514     0409  2C03               	goto	clrloop0	;do the next byte
   515                           
   516                           	psect	cstackCOMMON
   517     0070                     __pcstackCOMMON:
   518     0070                     ?_setup:
   519     0070                     ?_Lcd_Init8:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_Lcd_Clear8:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_spiInit:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_spiReceiveWait:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ??_spiReceiveWait:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_spiWrite:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ??_spiWrite:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_spiRead:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ??_spiRead:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_main:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_Lcd_Port8:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ??_Lcd_Port8:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_Lcd_Cmd8:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_Lcd_Write_Char8:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?___lwdiv:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     spiInit@sDataSample:	
   565                           ; 2 bytes @ 0x0
   566                           
   567     0070                     spiWrite@dat:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     Lcd_Port8@a:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ___lwdiv@divisor:	
   574                           ; 1 bytes @ 0x0
   575                           
   576                           
   577                           ; 2 bytes @ 0x0
   578     0070                     	ds	1
   579     0071                     ??_Lcd_Cmd8:
   580     0071                     ??_Lcd_Write_Char8:	
   581                           ; 1 bytes @ 0x1
   582                           
   583     0071                     spiInit@sClockIdle:	
   584                           ; 1 bytes @ 0x1
   585                           
   586                           
   587                           ; 1 bytes @ 0x1
   588     0071                     	ds	1
   589     0072                     spiInit@sTransmitEdge:
   590     0072                     Lcd_Write_Char8@y:	
   591                           ; 1 bytes @ 0x2
   592                           
   593     0072                     ___lwdiv@dividend:	
   594                           ; 1 bytes @ 0x2
   595                           
   596                           
   597                           ; 2 bytes @ 0x2
   598     0072                     	ds	1
   599     0073                     ??_spiInit:
   600     0073                     spiInit@sType:	
   601                           ; 1 bytes @ 0x3
   602                           
   603     0073                     Lcd_Cmd8@a:	
   604                           ; 1 bytes @ 0x3
   605                           
   606     0073                     Lcd_Write_Char8@a:	
   607                           ; 1 bytes @ 0x3
   608                           
   609                           
   610                           ; 1 bytes @ 0x3
   611     0073                     	ds	1
   612     0074                     ??_setup:
   613     0074                     ??_Lcd_Init8:	
   614                           ; 1 bytes @ 0x4
   615                           
   616     0074                     ??_Lcd_Clear8:	
   617                           ; 1 bytes @ 0x4
   618                           
   619     0074                     ?_Lcd_Set_Cursor8:	
   620                           ; 1 bytes @ 0x4
   621                           
   622     0074                     ?_Lcd_Write_String8:	
   623                           ; 1 bytes @ 0x4
   624                           
   625     0074                     ??___lwdiv:	
   626                           ; 1 bytes @ 0x4
   627                           
   628     0074                     Lcd_Set_Cursor8@b:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0074                     Lcd_Write_String8@a:	
   632                           ; 1 bytes @ 0x4
   633                           
   634                           
   635                           ; 2 bytes @ 0x4
   636     0074                     	ds	1
   637     0075                     ??_Lcd_Set_Cursor8:
   638     0075                     Lcd_Set_Cursor8@a:	
   639                           ; 1 bytes @ 0x5
   640                           
   641     0075                     ___lwdiv@quotient:	
   642                           ; 1 bytes @ 0x5
   643                           
   644                           
   645                           ; 2 bytes @ 0x5
   646     0075                     	ds	1
   647     0076                     ??_Lcd_Write_String8:
   648     0076                     Lcd_Set_Cursor8@temp:	
   649                           ; 1 bytes @ 0x6
   650                           
   651                           
   652                           ; 1 bytes @ 0x6
   653     0076                     	ds	1
   654     0077                     ___lwdiv@counter:
   655                           
   656                           ; 1 bytes @ 0x7
   657     0077                     	ds	1
   658     0078                     ?___lwmod:
   659     0078                     ___lwmod@divisor:	
   660                           ; 2 bytes @ 0x8
   661                           
   662                           
   663                           ; 2 bytes @ 0x8
   664     0078                     	ds	1
   665     0079                     Lcd_Write_String8@i:
   666                           
   667                           ; 2 bytes @ 0x9
   668     0079                     	ds	1
   669     007A                     ___lwmod@dividend:
   670                           
   671                           ; 2 bytes @ 0xA
   672     007A                     	ds	2
   673     007C                     ??___lwmod:
   674                           
   675                           ; 1 bytes @ 0xC
   676     007C                     	ds	1
   677     007D                     ___lwmod@counter:
   678                           
   679                           ; 1 bytes @ 0xD
   680     007D                     	ds	1
   681                           
   682                           	psect	cstackBANK0
   683     004F                     __pcstackBANK0:
   684     004F                     ?_sprintf:
   685     004F                     sprintf@f:	
   686                           ; 2 bytes @ 0x0
   687                           
   688                           
   689                           ; 1 bytes @ 0x0
   690     004F                     	ds	3
   691     0052                     ??_sprintf:
   692                           
   693                           ; 1 bytes @ 0x3
   694     0052                     	ds	3
   695     0055                     sprintf@ap:
   696                           
   697                           ; 1 bytes @ 0x6
   698     0055                     	ds	1
   699     0056                     sprintf@flag:
   700                           
   701                           ; 1 bytes @ 0x7
   702     0056                     	ds	1
   703     0057                     sprintf@prec:
   704                           
   705                           ; 1 bytes @ 0x8
   706     0057                     	ds	1
   707     0058                     sprintf@val:
   708                           
   709                           ; 2 bytes @ 0x9
   710     0058                     	ds	2
   711     005A                     sprintf@sp:
   712                           
   713                           ; 1 bytes @ 0xB
   714     005A                     	ds	1
   715     005B                     sprintf@c:
   716                           
   717                           ; 1 bytes @ 0xC
   718     005B                     	ds	1
   719     005C                     ??_main:
   720                           
   721                           ; 1 bytes @ 0xD
   722     005C                     	ds	3
   723     005F                     main@esc1:
   724                           
   725                           ; 1 bytes @ 0x10
   726     005F                     	ds	1
   727     0060                     main@esc2:
   728                           
   729                           ; 1 bytes @ 0x11
   730     0060                     	ds	1
   731     0061                     main@esc22:
   732                           
   733                           ; 1 bytes @ 0x12
   734     0061                     	ds	1
   735                           
   736                           	psect	maintext
   737     0692                     __pmaintext:	
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 69 in file "Master.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  esc22           1   18[BANK0 ] unsigned char 
   748 ;;  esc2            1   17[BANK0 ] unsigned char 
   749 ;;  esc1            1   16[BANK0 ] unsigned char 
   750 ;;  a               1    0        unsigned char 
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : B00/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0       3       0       0       0
   762 ;;      Temps:          0       3       0       0       0
   763 ;;      Totals:         0       6       0       0       0
   764 ;;Total ram usage:        6 bytes
   765 ;; Hardware stack levels required when called: 3
   766 ;; This function calls:
   767 ;;		_Lcd_Clear8
   768 ;;		_Lcd_Init8
   769 ;;		_Lcd_Set_Cursor8
   770 ;;		_Lcd_Write_String8
   771 ;;		_setup
   772 ;;		_spiRead
   773 ;;		_spiWrite
   774 ;;		_sprintf
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780     0692                     _main:	
   781                           ;psect for function _main
   782                           
   783     0692                     l1316:	
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   786                           
   787                           
   788                           ;Master.c: 70:     setup();
   789     0692  120A  118A  2488  120A  118A  	fcall	_setup
   790                           
   791                           ;Master.c: 71:     Lcd_Init8();
   792     0697  120A  118A  256D  120A  118A  	fcall	_Lcd_Init8
   793                           
   794                           ;Master.c: 72:     Lcd_Clear8();
   795     069C  120A  118A  2413  120A  118A  	fcall	_Lcd_Clear8
   796     06A1                     l1318:
   797     06A1                     l1320:
   798     06A1                     l1322:
   799     06A1                     l1324:
   800                           
   801                           ;Master.c: 79:     {;Master.c: 81:         PORTCbits.RC2 = 0;
   802     06A1  1283               	bcf	3,5	;RP0=0, select bank0
   803     06A2  1303               	bcf	3,6	;RP1=0, select bank0
   804     06A3  1107               	bcf	7,2	;volatile
   805     06A4                     l1326:
   806                           
   807                           ;Master.c: 82:         _delay((unsigned long)((5)*(8000000/4000.0)));
   808     06A4  300D               	movlw	13
   809     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   810     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   811     06A7  00DD               	movwf	??_main+1
   812     06A8  30FB               	movlw	251
   813     06A9  00DC               	movwf	??_main
   814     06AA                     u557:
   815     06AA  0BDC               	decfsz	??_main,f
   816     06AB  2EAA               	goto	u557
   817     06AC  0BDD               	decfsz	??_main+1,f
   818     06AD  2EAA               	goto	u557
   819     06AE                     l1328:
   820                           
   821                           ;Master.c: 84:         spiWrite(1);
   822     06AE  3001               	movlw	1
   823     06AF  120A  118A  23F5  120A  118A  	fcall	_spiWrite
   824     06B4                     l1330:
   825                           
   826                           ;Master.c: 85:         esc1 = spiRead();
   827     06B4  120A  118A  240A  120A  118A  	fcall	_spiRead
   828     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   829     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   830     06BB  00DF               	movwf	main@esc1
   831     06BC                     l1332:
   832                           
   833                           ;Master.c: 88:         _delay((unsigned long)((1)*(8000000/4000.0)));
   834     06BC  3003               	movlw	3
   835     06BD  1283               	bcf	3,5	;RP0=0, select bank0
   836     06BE  1303               	bcf	3,6	;RP1=0, select bank0
   837     06BF  00DD               	movwf	??_main+1
   838     06C0  3097               	movlw	151
   839     06C1  00DC               	movwf	??_main
   840     06C2                     u567:
   841     06C2  0BDC               	decfsz	??_main,f
   842     06C3  2EC2               	goto	u567
   843     06C4  0BDD               	decfsz	??_main+1,f
   844     06C5  2EC2               	goto	u567
   845     06C6                     l1334:
   846                           
   847                           ;Master.c: 89:         PORTCbits.RC2 = 1;
   848     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   849     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   850     06C8  1507               	bsf	7,2	;volatile
   851     06C9                     l1336:
   852                           
   853                           ;Master.c: 91:         _delay((unsigned long)((10)*(8000000/4000.0)));
   854     06C9  301A               	movlw	26
   855     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   856     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   857     06CC  00DD               	movwf	??_main+1
   858     06CD  30F7               	movlw	247
   859     06CE  00DC               	movwf	??_main
   860     06CF                     u577:
   861     06CF  0BDC               	decfsz	??_main,f
   862     06D0  2ECF               	goto	u577
   863     06D1  0BDD               	decfsz	??_main+1,f
   864     06D2  2ECF               	goto	u577
   865     06D3  2ED4               	nop2
   866     06D4                     l1338:
   867                           
   868                           ;Master.c: 95:         PORTCbits.RC1 = 0;
   869     06D4  1283               	bcf	3,5	;RP0=0, select bank0
   870     06D5  1303               	bcf	3,6	;RP1=0, select bank0
   871     06D6  1087               	bcf	7,1	;volatile
   872     06D7                     l1340:
   873                           
   874                           ;Master.c: 96:         _delay((unsigned long)((5)*(8000000/4000.0)));
   875     06D7  300D               	movlw	13
   876     06D8  1283               	bcf	3,5	;RP0=0, select bank0
   877     06D9  1303               	bcf	3,6	;RP1=0, select bank0
   878     06DA  00DD               	movwf	??_main+1
   879     06DB  30FB               	movlw	251
   880     06DC  00DC               	movwf	??_main
   881     06DD                     u587:
   882     06DD  0BDC               	decfsz	??_main,f
   883     06DE  2EDD               	goto	u587
   884     06DF  0BDD               	decfsz	??_main+1,f
   885     06E0  2EDD               	goto	u587
   886     06E1                     l1342:
   887                           
   888                           ;Master.c: 98:         spiWrite(1);
   889     06E1  3001               	movlw	1
   890     06E2  120A  118A  23F5  120A  118A  	fcall	_spiWrite
   891     06E7                     l1344:
   892                           
   893                           ;Master.c: 99:         esc2 = spiRead();
   894     06E7  120A  118A  240A  120A  118A  	fcall	_spiRead
   895     06EC  1283               	bcf	3,5	;RP0=0, select bank0
   896     06ED  1303               	bcf	3,6	;RP1=0, select bank0
   897     06EE  00E0               	movwf	main@esc2
   898     06EF                     l1346:
   899                           
   900                           ;Master.c: 106:         _delay((unsigned long)((5)*(8000000/4000.0)));
   901     06EF  300D               	movlw	13
   902     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   903     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   904     06F2  00DD               	movwf	??_main+1
   905     06F3  30FB               	movlw	251
   906     06F4  00DC               	movwf	??_main
   907     06F5                     u597:
   908     06F5  0BDC               	decfsz	??_main,f
   909     06F6  2EF5               	goto	u597
   910     06F7  0BDD               	decfsz	??_main+1,f
   911     06F8  2EF5               	goto	u597
   912     06F9                     l1348:
   913                           
   914                           ;Master.c: 107:         PORTCbits.RC1 = 1;
   915     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   916     06FA  1303               	bcf	3,6	;RP1=0, select bank0
   917     06FB  1487               	bsf	7,1	;volatile
   918     06FC                     l1350:
   919                           
   920                           ;Master.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
   921     06FC  301A               	movlw	26
   922     06FD  1283               	bcf	3,5	;RP0=0, select bank0
   923     06FE  1303               	bcf	3,6	;RP1=0, select bank0
   924     06FF  00DD               	movwf	??_main+1
   925     0700  30F7               	movlw	247
   926     0701  00DC               	movwf	??_main
   927     0702                     u607:
   928     0702  0BDC               	decfsz	??_main,f
   929     0703  2F02               	goto	u607
   930     0704  0BDD               	decfsz	??_main+1,f
   931     0705  2F02               	goto	u607
   932     0706  2F07               	nop2
   933     0707                     l1352:
   934                           
   935                           ;Master.c: 113:         PORTCbits.RC1 = 0;
   936     0707  1283               	bcf	3,5	;RP0=0, select bank0
   937     0708  1303               	bcf	3,6	;RP1=0, select bank0
   938     0709  1087               	bcf	7,1	;volatile
   939     070A                     l1354:
   940                           
   941                           ;Master.c: 114:         _delay((unsigned long)((5)*(8000000/4000.0)));
   942     070A  300D               	movlw	13
   943     070B  1283               	bcf	3,5	;RP0=0, select bank0
   944     070C  1303               	bcf	3,6	;RP1=0, select bank0
   945     070D  00DD               	movwf	??_main+1
   946     070E  30FB               	movlw	251
   947     070F  00DC               	movwf	??_main
   948     0710                     u617:
   949     0710  0BDC               	decfsz	??_main,f
   950     0711  2F10               	goto	u617
   951     0712  0BDD               	decfsz	??_main+1,f
   952     0713  2F10               	goto	u617
   953     0714                     l1356:
   954                           
   955                           ;Master.c: 116:         spiWrite(0);
   956     0714  3000               	movlw	0
   957     0715  120A  118A  23F5  120A  118A  	fcall	_spiWrite
   958     071A                     l1358:
   959                           
   960                           ;Master.c: 117:         esc22 = spiRead();
   961     071A  120A  118A  240A  120A  118A  	fcall	_spiRead
   962     071F  1283               	bcf	3,5	;RP0=0, select bank0
   963     0720  1303               	bcf	3,6	;RP1=0, select bank0
   964     0721  00E1               	movwf	main@esc22
   965     0722                     l1360:
   966                           
   967                           ;Master.c: 120:         _delay((unsigned long)((5)*(8000000/4000.0)));
   968     0722  300D               	movlw	13
   969     0723  1283               	bcf	3,5	;RP0=0, select bank0
   970     0724  1303               	bcf	3,6	;RP1=0, select bank0
   971     0725  00DD               	movwf	??_main+1
   972     0726  30FB               	movlw	251
   973     0727  00DC               	movwf	??_main
   974     0728                     u627:
   975     0728  0BDC               	decfsz	??_main,f
   976     0729  2F28               	goto	u627
   977     072A  0BDD               	decfsz	??_main+1,f
   978     072B  2F28               	goto	u627
   979     072C                     l1362:
   980                           
   981                           ;Master.c: 121:         PORTCbits.RC1 = 1;
   982     072C  1283               	bcf	3,5	;RP0=0, select bank0
   983     072D  1303               	bcf	3,6	;RP1=0, select bank0
   984     072E  1487               	bsf	7,1	;volatile
   985     072F                     l1364:
   986                           
   987                           ;Master.c: 122:         _delay((unsigned long)((10)*(8000000/4000.0)));
   988     072F  301A               	movlw	26
   989     0730  1283               	bcf	3,5	;RP0=0, select bank0
   990     0731  1303               	bcf	3,6	;RP1=0, select bank0
   991     0732  00DD               	movwf	??_main+1
   992     0733  30F7               	movlw	247
   993     0734  00DC               	movwf	??_main
   994     0735                     u637:
   995     0735  0BDC               	decfsz	??_main,f
   996     0736  2F35               	goto	u637
   997     0737  0BDD               	decfsz	??_main+1,f
   998     0738  2F35               	goto	u637
   999     0739  2F3A               	nop2
  1000     073A                     l1366:
  1001                           
  1002                           ;Master.c: 125:         sprintf(charesc1, "%d", esc1);
  1003     073A  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1004     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1005     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1006     073D  00CF               	movwf	sprintf@f
  1007     073E  085F               	movf	main@esc1,w
  1008     073F  00DC               	movwf	??_main
  1009     0740  01DD               	clrf	??_main+1
  1010     0741  085C               	movf	??_main,w
  1011     0742  00D0               	movwf	?_sprintf+1
  1012     0743  085D               	movf	??_main+1,w
  1013     0744  00D1               	movwf	?_sprintf+2
  1014     0745  3040               	movlw	(low (_charesc1| 0))& (0+255)
  1015     0746  120A  118A  25B8  120A  118A  	fcall	_sprintf
  1016     074B                     l1368:
  1017                           
  1018                           ;Master.c: 126:         sprintf(charesc2, "%d", esc2);
  1019     074B  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1020     074C  1283               	bcf	3,5	;RP0=0, select bank0
  1021     074D  1303               	bcf	3,6	;RP1=0, select bank0
  1022     074E  00CF               	movwf	sprintf@f
  1023     074F  0860               	movf	main@esc2,w
  1024     0750  00DC               	movwf	??_main
  1025     0751  01DD               	clrf	??_main+1
  1026     0752  085C               	movf	??_main,w
  1027     0753  00D0               	movwf	?_sprintf+1
  1028     0754  085D               	movf	??_main+1,w
  1029     0755  00D1               	movwf	?_sprintf+2
  1030     0756  3031               	movlw	(low (_charesc2| 0))& (0+255)
  1031     0757  120A  118A  25B8  120A  118A  	fcall	_sprintf
  1032     075C                     l1370:
  1033                           
  1034                           ;Master.c: 127:         sprintf(charesc22, "%d", esc22);
  1035     075C  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1036     075D  1283               	bcf	3,5	;RP0=0, select bank0
  1037     075E  1303               	bcf	3,6	;RP1=0, select bank0
  1038     075F  00CF               	movwf	sprintf@f
  1039     0760  0861               	movf	main@esc22,w
  1040     0761  00DC               	movwf	??_main
  1041     0762  01DD               	clrf	??_main+1
  1042     0763  085C               	movf	??_main,w
  1043     0764  00D0               	movwf	?_sprintf+1
  1044     0765  085D               	movf	??_main+1,w
  1045     0766  00D1               	movwf	?_sprintf+2
  1046     0767  3022               	movlw	(low (_charesc22| 0))& (0+255)
  1047     0768  120A  118A  25B8  120A  118A  	fcall	_sprintf
  1048     076D                     l1372:
  1049                           
  1050                           ;Master.c: 129:         Lcd_Clear8();
  1051     076D  120A  118A  2413  120A  118A  	fcall	_Lcd_Clear8
  1052     0772                     l1374:
  1053                           
  1054                           ;Master.c: 130:         Lcd_Set_Cursor8(1,1);
  1055     0772  01F4               	clrf	Lcd_Set_Cursor8@b
  1056     0773  0AF4               	incf	Lcd_Set_Cursor8@b,f
  1057     0774  3001               	movlw	1
  1058     0775  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor8
  1059     077A                     l1376:
  1060                           
  1061                           ;Master.c: 131:         Lcd_Write_String8("ADC1");
  1062     077A  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1063     077B  00F4               	movwf	Lcd_Write_String8@a
  1064     077C  3080               	movlw	128
  1065     077D  00F5               	movwf	Lcd_Write_String8@a+1
  1066     077E  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_String8
  1067     0783                     l1378:
  1068                           
  1069                           ;Master.c: 133:         Lcd_Set_Cursor8(1,7);
  1070     0783  3007               	movlw	7
  1071     0784  00F4               	movwf	Lcd_Set_Cursor8@b
  1072     0785  3001               	movlw	1
  1073     0786  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor8
  1074     078B                     l1380:
  1075                           
  1076                           ;Master.c: 134:         Lcd_Write_String8("ADC2");
  1077     078B  3016               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1078     078C  00F4               	movwf	Lcd_Write_String8@a
  1079     078D  3080               	movlw	128
  1080     078E  00F5               	movwf	Lcd_Write_String8@a+1
  1081     078F  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_String8
  1082     0794                     l1382:
  1083                           
  1084                           ;Master.c: 136:         Lcd_Set_Cursor8(1,12);
  1085     0794  300C               	movlw	12
  1086     0795  00F4               	movwf	Lcd_Set_Cursor8@b
  1087     0796  3001               	movlw	1
  1088     0797  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor8
  1089     079C                     l1384:
  1090                           
  1091                           ;Master.c: 137:         Lcd_Write_String8("CONT2");
  1092     079C  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1093     079D  00F4               	movwf	Lcd_Write_String8@a
  1094     079E  3080               	movlw	128
  1095     079F  00F5               	movwf	Lcd_Write_String8@a+1
  1096     07A0  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_String8
  1097     07A5                     l1386:
  1098                           
  1099                           ;Master.c: 139:         Lcd_Set_Cursor8(2,1);
  1100     07A5  01F4               	clrf	Lcd_Set_Cursor8@b
  1101     07A6  0AF4               	incf	Lcd_Set_Cursor8@b,f
  1102     07A7  3002               	movlw	2
  1103     07A8  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor8
  1104     07AD                     l1388:
  1105                           
  1106                           ;Master.c: 140:         Lcd_Write_String8(charesc1);
  1107     07AD  3040               	movlw	(low (_charesc1| 0))& (0+255)
  1108     07AE  00F4               	movwf	Lcd_Write_String8@a
  1109     07AF  3000               	movlw	0
  1110     07B0  00F5               	movwf	Lcd_Write_String8@a+1
  1111     07B1  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_String8
  1112     07B6                     l1390:
  1113                           
  1114                           ;Master.c: 142:         Lcd_Set_Cursor8(2,7);
  1115     07B6  3007               	movlw	7
  1116     07B7  00F4               	movwf	Lcd_Set_Cursor8@b
  1117     07B8  3002               	movlw	2
  1118     07B9  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor8
  1119     07BE                     l1392:
  1120                           
  1121                           ;Master.c: 143:         Lcd_Write_String8(charesc2);
  1122     07BE  3031               	movlw	(low (_charesc2| 0))& (0+255)
  1123     07BF  00F4               	movwf	Lcd_Write_String8@a
  1124     07C0  3000               	movlw	0
  1125     07C1  00F5               	movwf	Lcd_Write_String8@a+1
  1126     07C2  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_String8
  1127     07C7                     l1394:
  1128                           
  1129                           ;Master.c: 145:         Lcd_Set_Cursor8(2,12);
  1130     07C7  300C               	movlw	12
  1131     07C8  00F4               	movwf	Lcd_Set_Cursor8@b
  1132     07C9  3002               	movlw	2
  1133     07CA  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor8
  1134     07CF                     l1396:
  1135                           
  1136                           ;Master.c: 146:         Lcd_Write_String8(charesc22);
  1137     07CF  3022               	movlw	(low (_charesc22| 0))& (0+255)
  1138     07D0  00F4               	movwf	Lcd_Write_String8@a
  1139     07D1  3000               	movlw	0
  1140     07D2  00F5               	movwf	Lcd_Write_String8@a+1
  1141     07D3  120A  118A  24E7  120A  118A  	fcall	_Lcd_Write_String8
  1142     07D8                     l1398:
  1143                           
  1144                           ;Master.c: 147:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1145     07D8  3002               	movlw	2
  1146     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1147     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1148     07DB  00DE               	movwf	??_main+2
  1149     07DC  3004               	movlw	4
  1150     07DD  00DD               	movwf	??_main+1
  1151     07DE  30B9               	movlw	185
  1152     07DF  00DC               	movwf	??_main
  1153     07E0                     u647:
  1154     07E0  0BDC               	decfsz	??_main,f
  1155     07E1  2FE0               	goto	u647
  1156     07E2  0BDD               	decfsz	??_main+1,f
  1157     07E3  2FE0               	goto	u647
  1158     07E4  0BDE               	decfsz	??_main+2,f
  1159     07E5  2FE0               	goto	u647
  1160     07E6  2FE7               	nop2
  1161     07E7  2EA1               	goto	l1324
  1162     07E8  120A  118A  2800   	ljmp	start
  1163     07EB                     __end_of_main:
  1164                           
  1165                           	psect	text1
  1166     05B8                     __ptext1:	
  1167 ;; *************** function _sprintf *****************
  1168 ;; Defined at:
  1169 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  sp              1    wreg     PTR unsigned char 
  1172 ;;		 -> charesc22(15), charesc2(15), charesc1(15), 
  1173 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1174 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1177 ;;		 -> charesc22(15), charesc2(15), charesc1(15), 
  1178 ;;  tmpval          4    0        struct .
  1179 ;;  val             2    9[BANK0 ] unsigned int 
  1180 ;;  cp              2    0        PTR const unsigned char 
  1181 ;;  len             2    0        unsigned int 
  1182 ;;  c               1   12[BANK0 ] unsigned char 
  1183 ;;  prec            1    8[BANK0 ] char 
  1184 ;;  flag            1    7[BANK0 ] unsigned char 
  1185 ;;  ap              1    6[BANK0 ] PTR void [1]
  1186 ;;		 -> ?_sprintf(2), 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    0[BANK0 ] int 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       3       0       0       0
  1197 ;;      Locals:         0       7       0       0       0
  1198 ;;      Temps:          0       3       0       0       0
  1199 ;;      Totals:         0      13       0       0       0
  1200 ;;Total ram usage:       13 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 1
  1203 ;; This function calls:
  1204 ;;		___lwdiv
  1205 ;;		___lwmod
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211     05B8                     _sprintf:	
  1212                           ;psect for function _sprintf
  1213                           
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1217                           ;sprintf@sp stored from wreg
  1218     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1219     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1220     05BA  00DA               	movwf	sprintf@sp
  1221     05BB                     l1234:
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1224     05BB  3050               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1225     05BC  00D5               	movwf	sprintf@ap
  1226                           
  1227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1228     05BD  2E7D               	goto	l1286
  1229     05BE                     l1236:
  1230                           
  1231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1232     05BE  3025               	movlw	37
  1233     05BF  065B               	xorwf	sprintf@c,w
  1234     05C0  1903               	btfsc	3,2
  1235     05C1  2DC3               	goto	u431
  1236     05C2  2DC4               	goto	u430
  1237     05C3                     u431:
  1238     05C3  2DCE               	goto	l1242
  1239     05C4                     u430:
  1240     05C4                     l1238:
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1243     05C4  085A               	movf	sprintf@sp,w
  1244     05C5  0084               	movwf	4
  1245     05C6  085B               	movf	sprintf@c,w
  1246     05C7  1383               	bcf	3,7	;select IRP bank0
  1247     05C8  0080               	movwf	0
  1248     05C9                     l1240:
  1249     05C9  3001               	movlw	1
  1250     05CA  00D2               	movwf	??_sprintf
  1251     05CB  0852               	movf	??_sprintf,w
  1252     05CC  07DA               	addwf	sprintf@sp,f
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1255     05CD  2E7D               	goto	l1286
  1256     05CE                     l1242:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1259     05CE  01D6               	clrf	sprintf@flag
  1260     05CF                     l1246:	
  1261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1262                           
  1263     05CF  3001               	movlw	1
  1264     05D0  07CF               	addwf	sprintf@f,f
  1265     05D1  30FF               	movlw	-1
  1266     05D2  074F               	addwf	sprintf@f,w
  1267     05D3  0084               	movwf	4
  1268     05D4  120A  118A  200D  120A  118A  	fcall	stringdir
  1269     05D9  00DB               	movwf	sprintf@c
  1270     05DA  00D2               	movwf	??_sprintf
  1271     05DB  01D3               	clrf	??_sprintf+1
  1272                           
  1273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1274                           ; Switch size 1, requested type "simple"
  1275                           ; Number of cases is 1, Range of values is 0 to 0
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte            4     3 (average)
  1279                           ; direct_byte           11     8 (fixed)
  1280                           ; jumptable            260     6 (fixed)
  1281                           ;	Chosen strategy is simple_byte
  1282     05DC  0853               	movf	??_sprintf+1,w
  1283     05DD  3A00               	xorlw	0	; case 0
  1284     05DE  1903               	skipnz
  1285     05DF  2DE1               	goto	l1424
  1286     05E0  2E7D               	goto	l1286
  1287     05E1                     l1424:
  1288                           
  1289                           ; Switch size 1, requested type "simple"
  1290                           ; Number of cases is 3, Range of values is 0 to 105
  1291                           ; switch strategies available:
  1292                           ; Name         Instructions Cycles
  1293                           ; simple_byte           10     6 (average)
  1294                           ; jumptable            260     6 (fixed)
  1295                           ;	Chosen strategy is simple_byte
  1296     05E1  0852               	movf	??_sprintf,w
  1297     05E2  3A00               	xorlw	0	; case 0
  1298     05E3  1903               	skipnz
  1299     05E4  2E8D               	goto	l1288
  1300     05E5  3A64               	xorlw	100	; case 100
  1301     05E6  1903               	skipnz
  1302     05E7  2DEC               	goto	l1248
  1303     05E8  3A0D               	xorlw	13	; case 105
  1304     05E9  1903               	skipnz
  1305     05EA  2DEC               	goto	l1248
  1306     05EB  2E7D               	goto	l1286
  1307     05EC                     l1248:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1310     05EC  0855               	movf	sprintf@ap,w
  1311     05ED  0084               	movwf	4
  1312     05EE  1383               	bcf	3,7	;select IRP bank0
  1313     05EF  0800               	movf	0,w
  1314     05F0  00D8               	movwf	sprintf@val
  1315     05F1  0A84               	incf	4,f
  1316     05F2  0800               	movf	0,w
  1317     05F3  00D9               	movwf	sprintf@val+1
  1318     05F4                     l1250:
  1319     05F4  3002               	movlw	2
  1320     05F5  00D2               	movwf	??_sprintf
  1321     05F6  0852               	movf	??_sprintf,w
  1322     05F7  07D5               	addwf	sprintf@ap,f
  1323     05F8                     l1252:
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1326     05F8  1FD9               	btfss	sprintf@val+1,7
  1327     05F9  2DFB               	goto	u441
  1328     05FA  2DFC               	goto	u440
  1329     05FB                     u441:
  1330     05FB  2E05               	goto	l1258
  1331     05FC                     u440:
  1332     05FC                     l1254:
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1335     05FC  3003               	movlw	3
  1336     05FD  00D2               	movwf	??_sprintf
  1337     05FE  0852               	movf	??_sprintf,w
  1338     05FF  04D6               	iorwf	sprintf@flag,f
  1339     0600                     l1256:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1342     0600  09D8               	comf	sprintf@val,f
  1343     0601  09D9               	comf	sprintf@val+1,f
  1344     0602  0AD8               	incf	sprintf@val,f
  1345     0603  1903               	skipnz
  1346     0604  0AD9               	incf	sprintf@val+1,f
  1347     0605                     l1258:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1350     0605  01DB               	clrf	sprintf@c
  1351     0606  0ADB               	incf	sprintf@c,f
  1352     0607                     l1264:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1355     0607  085B               	movf	sprintf@c,w
  1356     0608  00D2               	movwf	??_sprintf
  1357     0609  0752               	addwf	??_sprintf,w
  1358     060A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1359     060B  0084               	movwf	4
  1360     060C  120A  118A  200D  120A  118A  	fcall	stringdir
  1361     0611  00D3               	movwf	??_sprintf+1
  1362     0612  120A  118A  200D  120A  118A  	fcall	stringdir
  1363     0617  00D4               	movwf	??_sprintf+2
  1364     0618  0854               	movf	??_sprintf+2,w
  1365     0619  0259               	subwf	sprintf@val+1,w
  1366     061A  1D03               	skipz
  1367     061B  2E1E               	goto	u455
  1368     061C  0853               	movf	??_sprintf+1,w
  1369     061D  0258               	subwf	sprintf@val,w
  1370     061E                     u455:
  1371     061E  1803               	skipnc
  1372     061F  2E21               	goto	u451
  1373     0620  2E22               	goto	u450
  1374     0621                     u451:
  1375     0621  2E23               	goto	l1268
  1376     0622                     u450:
  1377     0622  2E2D               	goto	l1270
  1378     0623                     l1268:
  1379     0623  3001               	movlw	1
  1380     0624  00D2               	movwf	??_sprintf
  1381     0625  0852               	movf	??_sprintf,w
  1382     0626  07DB               	addwf	sprintf@c,f
  1383     0627  3005               	movlw	5
  1384     0628  065B               	xorwf	sprintf@c,w
  1385     0629  1D03               	btfss	3,2
  1386     062A  2E2C               	goto	u461
  1387     062B  2E2D               	goto	u460
  1388     062C                     u461:
  1389     062C  2E07               	goto	l1264
  1390     062D                     u460:
  1391     062D                     l1270:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1394     062D  0856               	movf	sprintf@flag,w
  1395     062E  3903               	andlw	3
  1396     062F  1903               	btfsc	3,2
  1397     0630  2E32               	goto	u471
  1398     0631  2E33               	goto	u470
  1399     0632                     u471:
  1400     0632  2E3C               	goto	l1276
  1401     0633                     u470:
  1402     0633                     l1272:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1405     0633  085A               	movf	sprintf@sp,w
  1406     0634  0084               	movwf	4
  1407     0635  302D               	movlw	45
  1408     0636  1383               	bcf	3,7	;select IRP bank0
  1409     0637  0080               	movwf	0
  1410     0638                     l1274:
  1411     0638  3001               	movlw	1
  1412     0639  00D2               	movwf	??_sprintf
  1413     063A  0852               	movf	??_sprintf,w
  1414     063B  07DA               	addwf	sprintf@sp,f
  1415     063C                     l1276:
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1418     063C  085B               	movf	sprintf@c,w
  1419     063D  00D7               	movwf	sprintf@prec
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1422     063E  2E74               	goto	l1284
  1423     063F                     l1278:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1426     063F  300A               	movlw	10
  1427     0640  00F8               	movwf	___lwmod@divisor
  1428     0641  3000               	movlw	0
  1429     0642  00F9               	movwf	___lwmod@divisor+1
  1430     0643  0857               	movf	sprintf@prec,w
  1431     0644  00D2               	movwf	??_sprintf
  1432     0645  0752               	addwf	??_sprintf,w
  1433     0646  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1434     0647  0084               	movwf	4
  1435     0648  120A  118A  200D  120A  118A  	fcall	stringdir
  1436     064D  00F0               	movwf	___lwdiv@divisor
  1437     064E  120A  118A  200D  120A  118A  	fcall	stringdir
  1438     0653  00F1               	movwf	___lwdiv@divisor+1
  1439     0654  0859               	movf	sprintf@val+1,w
  1440     0655  00F3               	movwf	___lwdiv@dividend+1
  1441     0656  0858               	movf	sprintf@val,w
  1442     0657  00F2               	movwf	___lwdiv@dividend
  1443     0658  120A  118A  2529  120A  118A  	fcall	___lwdiv
  1444     065D  0871               	movf	?___lwdiv+1,w
  1445     065E  00FB               	movwf	___lwmod@dividend+1
  1446     065F  0870               	movf	?___lwdiv,w
  1447     0660  00FA               	movwf	___lwmod@dividend
  1448     0661  120A  118A  24AD  120A  118A  	fcall	___lwmod
  1449     0666  0878               	movf	?___lwmod,w
  1450     0667  3E30               	addlw	48
  1451     0668  1283               	bcf	3,5	;RP0=0, select bank0
  1452     0669  1303               	bcf	3,6	;RP1=0, select bank0
  1453     066A  00DB               	movwf	sprintf@c
  1454     066B                     l1280:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1457     066B  085A               	movf	sprintf@sp,w
  1458     066C  0084               	movwf	4
  1459     066D  085B               	movf	sprintf@c,w
  1460     066E  1383               	bcf	3,7	;select IRP bank0
  1461     066F  0080               	movwf	0
  1462     0670                     l1282:
  1463     0670  3001               	movlw	1
  1464     0671  00D2               	movwf	??_sprintf
  1465     0672  0852               	movf	??_sprintf,w
  1466     0673  07DA               	addwf	sprintf@sp,f
  1467     0674                     l1284:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1470     0674  30FF               	movlw	255
  1471     0675  00D2               	movwf	??_sprintf
  1472     0676  0852               	movf	??_sprintf,w
  1473     0677  07D7               	addwf	sprintf@prec,f
  1474     0678  0A57               	incf	sprintf@prec,w
  1475     0679  1D03               	btfss	3,2
  1476     067A  2E7C               	goto	u481
  1477     067B  2E7D               	goto	u480
  1478     067C                     u481:
  1479     067C  2E3F               	goto	l1278
  1480     067D                     u480:
  1481     067D                     l1286:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1484     067D  3001               	movlw	1
  1485     067E  07CF               	addwf	sprintf@f,f
  1486     067F  30FF               	movlw	-1
  1487     0680  074F               	addwf	sprintf@f,w
  1488     0681  0084               	movwf	4
  1489     0682  120A  118A  200D  120A  118A  	fcall	stringdir
  1490     0687  00DB               	movwf	sprintf@c
  1491     0688  085B               	movf	sprintf@c,w
  1492     0689  1D03               	btfss	3,2
  1493     068A  2E8C               	goto	u491
  1494     068B  2E8D               	goto	u490
  1495     068C                     u491:
  1496     068C  2DBE               	goto	l1236
  1497     068D                     u490:
  1498     068D                     l1288:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1501     068D  085A               	movf	sprintf@sp,w
  1502     068E  0084               	movwf	4
  1503     068F  1383               	bcf	3,7	;select IRP bank0
  1504     0690  0180               	clrf	0
  1505     0691                     l248:
  1506     0691  0008               	return
  1507     0692                     __end_of_sprintf:
  1508                           
  1509                           	psect	text2
  1510     04AD                     __ptext2:	
  1511 ;; *************** function ___lwmod *****************
  1512 ;; Defined at:
  1513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  divisor         2    8[COMMON] unsigned int 
  1516 ;;  dividend        2   10[COMMON] unsigned int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  counter         1   13[COMMON] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2    8[COMMON] unsigned int 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         4       0       0       0       0
  1529 ;;      Locals:         1       0       0       0       0
  1530 ;;      Temps:          1       0       0       0       0
  1531 ;;      Totals:         6       0       0       0       0
  1532 ;;Total ram usage:        6 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_sprintf
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541     04AD                     ___lwmod:	
  1542                           ;psect for function ___lwmod
  1543                           
  1544     04AD                     l1156:	
  1545                           ;incstack = 0
  1546                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1547                           
  1548     04AD  0878               	movf	___lwmod@divisor,w
  1549     04AE  0479               	iorwf	___lwmod@divisor+1,w
  1550     04AF  1903               	btfsc	3,2
  1551     04B0  2CB2               	goto	u371
  1552     04B1  2CB3               	goto	u370
  1553     04B2                     u371:
  1554     04B2  2CE2               	goto	l1174
  1555     04B3                     u370:
  1556     04B3                     l1158:
  1557     04B3  01FD               	clrf	___lwmod@counter
  1558     04B4  0AFD               	incf	___lwmod@counter,f
  1559     04B5  2CC1               	goto	l1164
  1560     04B6                     l1160:
  1561     04B6  3001               	movlw	1
  1562     04B7                     u385:
  1563     04B7  1003               	clrc
  1564     04B8  0DF8               	rlf	___lwmod@divisor,f
  1565     04B9  0DF9               	rlf	___lwmod@divisor+1,f
  1566     04BA  3EFF               	addlw	-1
  1567     04BB  1D03               	skipz
  1568     04BC  2CB7               	goto	u385
  1569     04BD                     l1162:
  1570     04BD  3001               	movlw	1
  1571     04BE  00FC               	movwf	??___lwmod
  1572     04BF  087C               	movf	??___lwmod,w
  1573     04C0  07FD               	addwf	___lwmod@counter,f
  1574     04C1                     l1164:
  1575     04C1  1FF9               	btfss	___lwmod@divisor+1,7
  1576     04C2  2CC4               	goto	u391
  1577     04C3  2CC5               	goto	u390
  1578     04C4                     u391:
  1579     04C4  2CB6               	goto	l1160
  1580     04C5                     u390:
  1581     04C5                     l1166:
  1582     04C5  0879               	movf	___lwmod@divisor+1,w
  1583     04C6  027B               	subwf	___lwmod@dividend+1,w
  1584     04C7  1D03               	skipz
  1585     04C8  2CCB               	goto	u405
  1586     04C9  0878               	movf	___lwmod@divisor,w
  1587     04CA  027A               	subwf	___lwmod@dividend,w
  1588     04CB                     u405:
  1589     04CB  1C03               	skipc
  1590     04CC  2CCE               	goto	u401
  1591     04CD  2CCF               	goto	u400
  1592     04CE                     u401:
  1593     04CE  2CD5               	goto	l1170
  1594     04CF                     u400:
  1595     04CF                     l1168:
  1596     04CF  0878               	movf	___lwmod@divisor,w
  1597     04D0  02FA               	subwf	___lwmod@dividend,f
  1598     04D1  0879               	movf	___lwmod@divisor+1,w
  1599     04D2  1C03               	skipc
  1600     04D3  03FB               	decf	___lwmod@dividend+1,f
  1601     04D4  02FB               	subwf	___lwmod@dividend+1,f
  1602     04D5                     l1170:
  1603     04D5  3001               	movlw	1
  1604     04D6                     u415:
  1605     04D6  1003               	clrc
  1606     04D7  0CF9               	rrf	___lwmod@divisor+1,f
  1607     04D8  0CF8               	rrf	___lwmod@divisor,f
  1608     04D9  3EFF               	addlw	-1
  1609     04DA  1D03               	skipz
  1610     04DB  2CD6               	goto	u415
  1611     04DC                     l1172:
  1612     04DC  3001               	movlw	1
  1613     04DD  02FD               	subwf	___lwmod@counter,f
  1614     04DE  1D03               	btfss	3,2
  1615     04DF  2CE1               	goto	u421
  1616     04E0  2CE2               	goto	u420
  1617     04E1                     u421:
  1618     04E1  2CC5               	goto	l1166
  1619     04E2                     u420:
  1620     04E2                     l1174:
  1621     04E2  087B               	movf	___lwmod@dividend+1,w
  1622     04E3  00F9               	movwf	?___lwmod+1
  1623     04E4  087A               	movf	___lwmod@dividend,w
  1624     04E5  00F8               	movwf	?___lwmod
  1625     04E6                     l534:
  1626     04E6  0008               	return
  1627     04E7                     __end_of___lwmod:
  1628                           
  1629                           	psect	text3
  1630     0529                     __ptext3:	
  1631 ;; *************** function ___lwdiv *****************
  1632 ;; Defined at:
  1633 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  divisor         2    0[COMMON] unsigned int 
  1636 ;;  dividend        2    2[COMMON] unsigned int 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  quotient        2    5[COMMON] unsigned int 
  1639 ;;  counter         1    7[COMMON] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2    0[COMMON] unsigned int 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         4       0       0       0       0
  1650 ;;      Locals:         3       0       0       0       0
  1651 ;;      Temps:          1       0       0       0       0
  1652 ;;      Totals:         8       0       0       0       0
  1653 ;;Total ram usage:        8 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_sprintf
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662     0529                     ___lwdiv:	
  1663                           ;psect for function ___lwdiv
  1664                           
  1665     0529                     l1130:	
  1666                           ;incstack = 0
  1667                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1668                           
  1669     0529  01F5               	clrf	___lwdiv@quotient
  1670     052A  01F6               	clrf	___lwdiv@quotient+1
  1671     052B                     l1132:
  1672     052B  0870               	movf	___lwdiv@divisor,w
  1673     052C  0471               	iorwf	___lwdiv@divisor+1,w
  1674     052D  1903               	btfsc	3,2
  1675     052E  2D30               	goto	u301
  1676     052F  2D31               	goto	u300
  1677     0530                     u301:
  1678     0530  2D68               	goto	l1152
  1679     0531                     u300:
  1680     0531                     l1134:
  1681     0531  01F7               	clrf	___lwdiv@counter
  1682     0532  0AF7               	incf	___lwdiv@counter,f
  1683     0533  2D3F               	goto	l1140
  1684     0534                     l1136:
  1685     0534  3001               	movlw	1
  1686     0535                     u315:
  1687     0535  1003               	clrc
  1688     0536  0DF0               	rlf	___lwdiv@divisor,f
  1689     0537  0DF1               	rlf	___lwdiv@divisor+1,f
  1690     0538  3EFF               	addlw	-1
  1691     0539  1D03               	skipz
  1692     053A  2D35               	goto	u315
  1693     053B                     l1138:
  1694     053B  3001               	movlw	1
  1695     053C  00F4               	movwf	??___lwdiv
  1696     053D  0874               	movf	??___lwdiv,w
  1697     053E  07F7               	addwf	___lwdiv@counter,f
  1698     053F                     l1140:
  1699     053F  1FF1               	btfss	___lwdiv@divisor+1,7
  1700     0540  2D42               	goto	u321
  1701     0541  2D43               	goto	u320
  1702     0542                     u321:
  1703     0542  2D34               	goto	l1136
  1704     0543                     u320:
  1705     0543                     l1142:
  1706     0543  3001               	movlw	1
  1707     0544                     u335:
  1708     0544  1003               	clrc
  1709     0545  0DF5               	rlf	___lwdiv@quotient,f
  1710     0546  0DF6               	rlf	___lwdiv@quotient+1,f
  1711     0547  3EFF               	addlw	-1
  1712     0548  1D03               	skipz
  1713     0549  2D44               	goto	u335
  1714     054A  0871               	movf	___lwdiv@divisor+1,w
  1715     054B  0273               	subwf	___lwdiv@dividend+1,w
  1716     054C  1D03               	skipz
  1717     054D  2D50               	goto	u345
  1718     054E  0870               	movf	___lwdiv@divisor,w
  1719     054F  0272               	subwf	___lwdiv@dividend,w
  1720     0550                     u345:
  1721     0550  1C03               	skipc
  1722     0551  2D53               	goto	u341
  1723     0552  2D54               	goto	u340
  1724     0553                     u341:
  1725     0553  2D5B               	goto	l1148
  1726     0554                     u340:
  1727     0554                     l1144:
  1728     0554  0870               	movf	___lwdiv@divisor,w
  1729     0555  02F2               	subwf	___lwdiv@dividend,f
  1730     0556  0871               	movf	___lwdiv@divisor+1,w
  1731     0557  1C03               	skipc
  1732     0558  03F3               	decf	___lwdiv@dividend+1,f
  1733     0559  02F3               	subwf	___lwdiv@dividend+1,f
  1734     055A                     l1146:
  1735     055A  1475               	bsf	___lwdiv@quotient,0
  1736     055B                     l1148:
  1737     055B  3001               	movlw	1
  1738     055C                     u355:
  1739     055C  1003               	clrc
  1740     055D  0CF1               	rrf	___lwdiv@divisor+1,f
  1741     055E  0CF0               	rrf	___lwdiv@divisor,f
  1742     055F  3EFF               	addlw	-1
  1743     0560  1D03               	skipz
  1744     0561  2D5C               	goto	u355
  1745     0562                     l1150:
  1746     0562  3001               	movlw	1
  1747     0563  02F7               	subwf	___lwdiv@counter,f
  1748     0564  1D03               	btfss	3,2
  1749     0565  2D67               	goto	u361
  1750     0566  2D68               	goto	u360
  1751     0567                     u361:
  1752     0567  2D43               	goto	l1142
  1753     0568                     u360:
  1754     0568                     l1152:
  1755     0568  0876               	movf	___lwdiv@quotient+1,w
  1756     0569  00F1               	movwf	?___lwdiv+1
  1757     056A  0875               	movf	___lwdiv@quotient,w
  1758     056B  00F0               	movwf	?___lwdiv
  1759     056C                     l524:
  1760     056C  0008               	return
  1761     056D                     __end_of___lwdiv:
  1762                           
  1763                           	psect	text4
  1764     03F5                     __ptext4:	
  1765 ;; *************** function _spiWrite *****************
  1766 ;; Defined at:
  1767 ;;		line 34 in file "SPI.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  dat             1    wreg     unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  dat             1    0[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         1       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0
  1784 ;;      Totals:         1       0       0       0       0
  1785 ;;Total ram usage:        1 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794     03F5                     _spiWrite:	
  1795                           ;psect for function _spiWrite
  1796                           
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _spiWrite: [wreg]
  1800                           ;spiWrite@dat stored from wreg
  1801     03F5  00F0               	movwf	spiWrite@dat
  1802     03F6                     l1178:
  1803                           
  1804                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1805     03F6  0870               	movf	spiWrite@dat,w
  1806     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1807     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1808     03F9  0093               	movwf	19	;volatile
  1809     03FA                     l26:
  1810     03FA  0008               	return
  1811     03FB                     __end_of_spiWrite:
  1812                           
  1813                           	psect	text5
  1814     040A                     __ptext5:	
  1815 ;; *************** function _spiRead *****************
  1816 ;; Defined at:
  1817 ;;		line 47 in file "SPI.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 1
  1838 ;; This function calls:
  1839 ;;		_spiReceiveWait
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845     040A                     _spiRead:	
  1846                           ;psect for function _spiRead
  1847                           
  1848     040A                     l1180:	
  1849                           ;incstack = 0
  1850                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1851                           
  1852                           
  1853                           ;SPI.c: 49:     spiReceiveWait();
  1854     040A  120A  118A  23FB  120A  118A  	fcall	_spiReceiveWait
  1855     040F                     l1182:
  1856                           
  1857                           ;SPI.c: 50:     return(SSPBUF);
  1858     040F  1283               	bcf	3,5	;RP0=0, select bank0
  1859     0410  1303               	bcf	3,6	;RP1=0, select bank0
  1860     0411  0813               	movf	19,w	;volatile
  1861     0412                     l34:
  1862     0412  0008               	return
  1863     0413                     __end_of_spiRead:
  1864                           
  1865                           	psect	text6
  1866     03FB                     __ptext6:	
  1867 ;; *************** function _spiReceiveWait *****************
  1868 ;; Defined at:
  1869 ;;		line 29 in file "SPI.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		None
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_spiRead
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896     03FB                     _spiReceiveWait:	
  1897                           ;psect for function _spiReceiveWait
  1898                           
  1899     03FB                     l1106:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _spiReceiveWait: []
  1902                           
  1903     03FB                     l20:	
  1904                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1905                           
  1906     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1907     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  1908     03FD  1C14               	btfss	20,0	;volatile
  1909     03FE  2C00               	goto	u291
  1910     03FF  2C01               	goto	u290
  1911     0400                     u291:
  1912     0400  2BFB               	goto	l20
  1913     0401                     u290:
  1914     0401                     l23:
  1915     0401  0008               	return
  1916     0402                     __end_of_spiReceiveWait:
  1917                           
  1918                           	psect	text7
  1919     0488                     __ptext7:	
  1920 ;; *************** function _setup *****************
  1921 ;; Defined at:
  1922 ;;		line 153 in file "Master.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 1
  1943 ;; This function calls:
  1944 ;;		_spiInit
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     0488                     _setup:	
  1951                           ;psect for function _setup
  1952                           
  1953     0488                     l1186:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1956                           
  1957                           
  1958                           ;Master.c: 154:     ANSEL = 0;
  1959     0488  1683               	bsf	3,5	;RP0=1, select bank3
  1960     0489  1703               	bsf	3,6	;RP1=1, select bank3
  1961     048A  0188               	clrf	8	;volatile
  1962                           
  1963                           ;Master.c: 155:     ANSELH = 0;
  1964     048B  0189               	clrf	9	;volatile
  1965     048C                     l1188:
  1966                           
  1967                           ;Master.c: 157:     TRISCbits.TRISC1 = 0;
  1968     048C  1683               	bsf	3,5	;RP0=1, select bank1
  1969     048D  1303               	bcf	3,6	;RP1=0, select bank1
  1970     048E  1087               	bcf	7,1	;volatile
  1971     048F                     l1190:
  1972                           
  1973                           ;Master.c: 158:     TRISCbits.TRISC2 = 0;
  1974     048F  1107               	bcf	7,2	;volatile
  1975     0490                     l1192:
  1976                           
  1977                           ;Master.c: 160:     TRISCbits.TRISC3 = 0;
  1978     0490  1187               	bcf	7,3	;volatile
  1979     0491                     l1194:
  1980                           
  1981                           ;Master.c: 161:     TRISCbits.TRISC5 = 0;
  1982     0491  1287               	bcf	7,5	;volatile
  1983     0492                     l1196:
  1984                           
  1985                           ;Master.c: 163:     TRISE = 0b1100;
  1986     0492  300C               	movlw	12
  1987     0493  0089               	movwf	9	;volatile
  1988     0494                     l1198:
  1989                           
  1990                           ;Master.c: 164:     TRISB = 0;
  1991     0494  0186               	clrf	6	;volatile
  1992     0495                     l1200:
  1993                           
  1994                           ;Master.c: 165:     TRISD = 0;
  1995     0495  0188               	clrf	8	;volatile
  1996     0496                     l1202:
  1997                           
  1998                           ;Master.c: 166:     TRISA = 0;
  1999     0496  0185               	clrf	5	;volatile
  2000     0497                     l1204:
  2001                           
  2002                           ;Master.c: 168:     PORTB = 0;
  2003     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2004     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2005     0499  0186               	clrf	6	;volatile
  2006     049A                     l1206:
  2007                           
  2008                           ;Master.c: 169:     PORTD = 0;
  2009     049A  0188               	clrf	8	;volatile
  2010     049B                     l1208:
  2011                           
  2012                           ;Master.c: 170:     PORTE = 0;
  2013     049B  0189               	clrf	9	;volatile
  2014     049C                     l1210:
  2015                           
  2016                           ;Master.c: 171:     PORTCbits.RC2 = 1;
  2017     049C  1507               	bsf	7,2	;volatile
  2018     049D                     l1212:
  2019                           
  2020                           ;Master.c: 172:     PORTCbits.RC1 = 1;
  2021     049D  1487               	bsf	7,1	;volatile
  2022     049E                     l1214:
  2023                           
  2024                           ;Master.c: 175:     OSCCONbits.IRCF = 0b111;
  2025     049E  3070               	movlw	112
  2026     049F  1683               	bsf	3,5	;RP0=1, select bank1
  2027     04A0  1303               	bcf	3,6	;RP1=0, select bank1
  2028     04A1  048F               	iorwf	15,f	;volatile
  2029     04A2                     l1216:
  2030                           
  2031                           ;Master.c: 176:     OSCCONbits.SCS = 1;
  2032     04A2  140F               	bsf	15,0	;volatile
  2033     04A3                     l1218:
  2034                           
  2035                           ;Master.c: 177:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  2036     04A3  01F0               	clrf	spiInit@sDataSample
  2037     04A4  01F1               	clrf	spiInit@sClockIdle
  2038     04A5  01F2               	clrf	spiInit@sTransmitEdge
  2039     04A6  3020               	movlw	32
  2040     04A7  120A  118A  2420  120A  118A  	fcall	_spiInit
  2041     04AC                     l99:
  2042     04AC  0008               	return
  2043     04AD                     __end_of_setup:
  2044                           
  2045                           	psect	text8
  2046     0420                     __ptext8:	
  2047 ;; *************** function _spiInit *****************
  2048 ;; Defined at:
  2049 ;;		line 12 in file "SPI.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  sType           1    wreg     enum E1292
  2052 ;;  sDataSample     1    0[COMMON] enum E1300
  2053 ;;  sClockIdle      1    1[COMMON] enum E1304
  2054 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  sType           1    3[COMMON] enum E1292
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         3       0       0       0       0
  2067 ;;      Locals:         1       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0
  2069 ;;      Totals:         4       0       0       0       0
  2070 ;;Total ram usage:        4 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_setup
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079     0420                     _spiInit:	
  2080                           ;psect for function _spiInit
  2081                           
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2085                           ;spiInit@sType stored from wreg
  2086     0420  00F3               	movwf	spiInit@sType
  2087     0421                     l1096:
  2088                           
  2089                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2090     0421  1683               	bsf	3,5	;RP0=1, select bank1
  2091     0422  1303               	bcf	3,6	;RP1=0, select bank1
  2092     0423  1287               	bcf	7,5	;volatile
  2093                           
  2094                           ;SPI.c: 15:     if(sType & 0b00000100)
  2095     0424  1D73               	btfss	spiInit@sType,2
  2096     0425  2C27               	goto	u281
  2097     0426  2C28               	goto	u280
  2098     0427                     u281:
  2099     0427  2C2C               	goto	l1102
  2100     0428                     u280:
  2101     0428                     l1098:
  2102                           
  2103                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2104     0428  0872               	movf	spiInit@sTransmitEdge,w
  2105     0429  0094               	movwf	20	;volatile
  2106     042A                     l1100:
  2107                           
  2108                           ;SPI.c: 18:         TRISC3 = 1;
  2109     042A  1587               	bsf	7,3	;volatile
  2110                           
  2111                           ;SPI.c: 19:     }
  2112     042B  2C30               	goto	l16
  2113     042C                     l1102:
  2114                           
  2115                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2116     042C  0870               	movf	spiInit@sDataSample,w
  2117     042D  0472               	iorwf	spiInit@sTransmitEdge,w
  2118     042E  0094               	movwf	20	;volatile
  2119     042F                     l1104:
  2120                           
  2121                           ;SPI.c: 23:         TRISC3 = 0;
  2122     042F  1187               	bcf	7,3	;volatile
  2123     0430                     l16:	
  2124                           ;SPI.c: 24:     }
  2125                           
  2126                           
  2127                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2128     0430  0873               	movf	spiInit@sType,w
  2129     0431  0471               	iorwf	spiInit@sClockIdle,w
  2130     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2131     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2132     0434  0094               	movwf	20	;volatile
  2133     0435                     l17:
  2134     0435  0008               	return
  2135     0436                     __end_of_spiInit:
  2136                           
  2137                           	psect	text9
  2138     04E7                     __ptext9:	
  2139 ;; *************** function _Lcd_Write_String8 *****************
  2140 ;; Defined at:
  2141 ;;		line 75 in file "LCD8bits.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  a               2    4[COMMON] PTR unsigned char 
  2144 ;;		 -> STR_6(6), STR_5(5), STR_4(5), charesc22(15), 
  2145 ;;		 -> charesc2(15), charesc1(15), 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  i               2    9[COMMON] int 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         2       0       0       0       0
  2158 ;;      Locals:         2       0       0       0       0
  2159 ;;      Temps:          3       0       0       0       0
  2160 ;;      Totals:         7       0       0       0       0
  2161 ;;Total ram usage:        7 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 2
  2164 ;; This function calls:
  2165 ;;		_Lcd_Write_Char8
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171     04E7                     _Lcd_Write_String8:	
  2172                           ;psect for function _Lcd_Write_String8
  2173                           
  2174     04E7                     l1308:	
  2175                           ;incstack = 0
  2176                           ; Regs used in _Lcd_Write_String8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2177                           
  2178                           
  2179                           ;LCD8bits.c: 76:     int i;;LCD8bits.c: 77:     for (i = 0; a[i] != '\0'; i++)
  2180     04E7  01F9               	clrf	Lcd_Write_String8@i
  2181     04E8  01FA               	clrf	Lcd_Write_String8@i+1
  2182     04E9  2D0C               	goto	l1314
  2183     04EA                     l1310:
  2184                           
  2185                           ;LCD8bits.c: 78:         Lcd_Write_Char8(a[i]);
  2186     04EA  0879               	movf	Lcd_Write_String8@i,w
  2187     04EB  0774               	addwf	Lcd_Write_String8@a,w
  2188     04EC  00F7               	movwf	??_Lcd_Write_String8+1
  2189     04ED  0875               	movf	Lcd_Write_String8@a+1,w
  2190     04EE  00F6               	movwf	??_Lcd_Write_String8
  2191     04EF  1803               	skipnc
  2192     04F0  0AF6               	incf	??_Lcd_Write_String8,f
  2193     04F1  1FF9               	btfss	Lcd_Write_String8@i,7
  2194     04F2  2CF4               	goto	u520
  2195     04F3  03F6               	decf	??_Lcd_Write_String8,f
  2196     04F4                     u520:
  2197     04F4  0876               	movf	??_Lcd_Write_String8,w
  2198     04F5  00F8               	movwf	??_Lcd_Write_String8+2
  2199     04F6  0878               	movf	??_Lcd_Write_String8+2,w
  2200     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2201     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2202     04F9  00FF               	movwf	btemp+1
  2203     04FA  0877               	movf	??_Lcd_Write_String8+1,w
  2204     04FB  0084               	movwf	4
  2205     04FC  120A  118A  2003  120A  118A  	fcall	stringtab
  2206     0501  120A  118A  2436  120A  118A  	fcall	_Lcd_Write_Char8
  2207     0506                     l1312:
  2208     0506  3001               	movlw	1
  2209     0507  07F9               	addwf	Lcd_Write_String8@i,f
  2210     0508  1803               	skipnc
  2211     0509  0AFA               	incf	Lcd_Write_String8@i+1,f
  2212     050A  3000               	movlw	0
  2213     050B  07FA               	addwf	Lcd_Write_String8@i+1,f
  2214     050C                     l1314:
  2215     050C  0879               	movf	Lcd_Write_String8@i,w
  2216     050D  0774               	addwf	Lcd_Write_String8@a,w
  2217     050E  00F7               	movwf	??_Lcd_Write_String8+1
  2218     050F  0875               	movf	Lcd_Write_String8@a+1,w
  2219     0510  00F6               	movwf	??_Lcd_Write_String8
  2220     0511  1803               	skipnc
  2221     0512  0AF6               	incf	??_Lcd_Write_String8,f
  2222     0513  1FF9               	btfss	Lcd_Write_String8@i,7
  2223     0514  2D16               	goto	u530
  2224     0515  03F6               	decf	??_Lcd_Write_String8,f
  2225     0516                     u530:
  2226     0516  0876               	movf	??_Lcd_Write_String8,w
  2227     0517  00F8               	movwf	??_Lcd_Write_String8+2
  2228     0518  0878               	movf	??_Lcd_Write_String8+2,w
  2229     0519  1283               	bcf	3,5	;RP0=0, select bank0
  2230     051A  1303               	bcf	3,6	;RP1=0, select bank0
  2231     051B  00FF               	movwf	btemp+1
  2232     051C  0877               	movf	??_Lcd_Write_String8+1,w
  2233     051D  0084               	movwf	4
  2234     051E  120A  118A  2003  120A  118A  	fcall	stringtab
  2235     0523  3A00               	xorlw	0
  2236     0524  1D03               	skipz
  2237     0525  2D27               	goto	u541
  2238     0526  2D28               	goto	u540
  2239     0527                     u541:
  2240     0527  2CEA               	goto	l1310
  2241     0528                     u540:
  2242     0528                     l132:
  2243     0528  0008               	return
  2244     0529                     __end_of_Lcd_Write_String8:
  2245                           
  2246                           	psect	text10
  2247     0436                     __ptext10:	
  2248 ;; *************** function _Lcd_Write_Char8 *****************
  2249 ;; Defined at:
  2250 ;;		line 63 in file "LCD8bits.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  a               1    wreg     unsigned char 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  a               1    3[COMMON] unsigned char 
  2255 ;;  y               1    2[COMMON] unsigned char 
  2256 ;;  temp            1    0        unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         2       0       0       0       0
  2268 ;;      Temps:          1       0       0       0       0
  2269 ;;      Totals:         3       0       0       0       0
  2270 ;;Total ram usage:        3 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 1
  2273 ;; This function calls:
  2274 ;;		_Lcd_Port8
  2275 ;; This function is called by:
  2276 ;;		_Lcd_Write_String8
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280     0436                     _Lcd_Write_Char8:	
  2281                           ;psect for function _Lcd_Write_Char8
  2282                           
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in _Lcd_Write_Char8: [wreg+status,2+status,0+pclath+cstack]
  2286                           ;Lcd_Write_Char8@a stored from wreg
  2287     0436  00F3               	movwf	Lcd_Write_Char8@a
  2288     0437                     l1118:
  2289                           
  2290                           ;LCD8bits.c: 66:     y = a;
  2291     0437  0873               	movf	Lcd_Write_Char8@a,w
  2292     0438  00F2               	movwf	Lcd_Write_Char8@y
  2293     0439                     l1120:
  2294                           
  2295                           ;LCD8bits.c: 67:     PORTEbits.RE0 = 1;
  2296     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2297     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2298     043B  1409               	bsf	9,0	;volatile
  2299     043C                     l1122:
  2300                           
  2301                           ;LCD8bits.c: 68:     Lcd_Port8(y);
  2302     043C  0872               	movf	Lcd_Write_Char8@y,w
  2303     043D  120A  118A  23EF  120A  118A  	fcall	_Lcd_Port8
  2304     0442                     l1124:
  2305                           
  2306                           ;LCD8bits.c: 69:     PORTEbits.RE1 = 1;
  2307     0442  1283               	bcf	3,5	;RP0=0, select bank0
  2308     0443  1303               	bcf	3,6	;RP1=0, select bank0
  2309     0444  1489               	bsf	9,1	;volatile
  2310     0445                     l1126:
  2311                           
  2312                           ;LCD8bits.c: 70:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2313     0445  301A               	movlw	26
  2314     0446  00F1               	movwf	??_Lcd_Write_Char8
  2315     0447                     u657:
  2316     0447  0BF1               	decfsz	??_Lcd_Write_Char8,f
  2317     0448  2C47               	goto	u657
  2318     0449  0000               	nop
  2319     044A                     l1128:
  2320                           
  2321                           ;LCD8bits.c: 71:     PORTEbits.RE1 = 0;
  2322     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2323     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2324     044C  1089               	bcf	9,1	;volatile
  2325     044D                     l126:
  2326     044D  0008               	return
  2327     044E                     __end_of_Lcd_Write_Char8:
  2328                           
  2329                           	psect	text11
  2330     0468                     __ptext11:	
  2331 ;; *************** function _Lcd_Set_Cursor8 *****************
  2332 ;; Defined at:
  2333 ;;		line 33 in file "LCD8bits.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  a               1    wreg     unsigned char 
  2336 ;;  b               1    4[COMMON] unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  a               1    5[COMMON] unsigned char 
  2339 ;;  temp            1    6[COMMON] unsigned char 
  2340 ;;  y               1    0        unsigned char 
  2341 ;;  z               1    0        unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         1       0       0       0       0
  2352 ;;      Locals:         2       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         3       0       0       0       0
  2355 ;;Total ram usage:        3 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 2
  2358 ;; This function calls:
  2359 ;;		_Lcd_Cmd8
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365     0468                     _Lcd_Set_Cursor8:	
  2366                           ;psect for function _Lcd_Set_Cursor8
  2367                           
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in _Lcd_Set_Cursor8: [wreg+status,2+status,0+pclath+cstack]
  2371                           ;Lcd_Set_Cursor8@a stored from wreg
  2372     0468  00F5               	movwf	Lcd_Set_Cursor8@a
  2373     0469                     l1296:
  2374                           
  2375                           ;LCD8bits.c: 34:     char temp, z, y;;LCD8bits.c: 35:     if (a == 1) {
  2376     0469  0375               	decf	Lcd_Set_Cursor8@a,w
  2377     046A  1D03               	btfss	3,2
  2378     046B  2C6D               	goto	u501
  2379     046C  2C6E               	goto	u500
  2380     046D                     u501:
  2381     046D  2C78               	goto	l1302
  2382     046E                     u500:
  2383     046E                     l1298:
  2384                           
  2385                           ;LCD8bits.c: 36:         temp = 0x80 + b - 1;
  2386     046E  0874               	movf	Lcd_Set_Cursor8@b,w
  2387     046F  3E7F               	addlw	127
  2388     0470  00F6               	movwf	Lcd_Set_Cursor8@temp
  2389     0471                     l1300:
  2390                           
  2391                           ;LCD8bits.c: 37:         Lcd_Cmd8(temp);
  2392     0471  0876               	movf	Lcd_Set_Cursor8@temp,w
  2393     0472  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2394                           
  2395                           ;LCD8bits.c: 38:     } else if (a == 2) {
  2396     0477  2C87               	goto	l120
  2397     0478                     l1302:
  2398     0478  3002               	movlw	2
  2399     0479  0675               	xorwf	Lcd_Set_Cursor8@a,w
  2400     047A  1D03               	btfss	3,2
  2401     047B  2C7D               	goto	u511
  2402     047C  2C7E               	goto	u510
  2403     047D                     u511:
  2404     047D  2C87               	goto	l120
  2405     047E                     u510:
  2406     047E                     l1304:
  2407                           
  2408                           ;LCD8bits.c: 39:         temp = 0xC0 + b - 1;
  2409     047E  0874               	movf	Lcd_Set_Cursor8@b,w
  2410     047F  3EBF               	addlw	191
  2411     0480  00F6               	movwf	Lcd_Set_Cursor8@temp
  2412     0481                     l1306:
  2413                           
  2414                           ;LCD8bits.c: 40:         Lcd_Cmd8(temp);
  2415     0481  0876               	movf	Lcd_Set_Cursor8@temp,w
  2416     0482  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2417     0487                     l120:
  2418     0487  0008               	return
  2419     0488                     __end_of_Lcd_Set_Cursor8:
  2420                           
  2421                           	psect	text12
  2422     056D                     __ptext12:	
  2423 ;; *************** function _Lcd_Init8 *****************
  2424 ;; Defined at:
  2425 ;;		line 44 in file "LCD8bits.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, pclath, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2439 ;;      Params:         0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0
  2441 ;;      Temps:          2       0       0       0       0
  2442 ;;      Totals:         2       0       0       0       0
  2443 ;;Total ram usage:        2 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 2
  2446 ;; This function calls:
  2447 ;;		_Lcd_Cmd8
  2448 ;;		_Lcd_Port8
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454     056D                     _Lcd_Init8:	
  2455                           ;psect for function _Lcd_Init8
  2456                           
  2457     056D                     l1222:	
  2458                           ;incstack = 0
  2459                           ; Regs used in _Lcd_Init8: [wreg+status,2+status,0+pclath+cstack]
  2460                           
  2461                           
  2462                           ;LCD8bits.c: 45:     Lcd_Port8(0x00);
  2463     056D  3000               	movlw	0
  2464     056E  120A  118A  23EF  120A  118A  	fcall	_Lcd_Port8
  2465     0573                     l1224:
  2466                           
  2467                           ;LCD8bits.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2468     0573  3034               	movlw	52
  2469     0574  00F5               	movwf	??_Lcd_Init8+1
  2470     0575  30F1               	movlw	241
  2471     0576  00F4               	movwf	??_Lcd_Init8
  2472     0577                     u667:
  2473     0577  0BF4               	decfsz	??_Lcd_Init8,f
  2474     0578  2D77               	goto	u667
  2475     0579  0BF5               	decfsz	??_Lcd_Init8+1,f
  2476     057A  2D77               	goto	u667
  2477     057B  2D7C               	nop2
  2478     057C                     l1226:
  2479                           
  2480                           ;LCD8bits.c: 47:     Lcd_Cmd8(0x30);
  2481     057C  3030               	movlw	48
  2482     057D  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2483                           
  2484                           ;LCD8bits.c: 48:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2485     0582  300D               	movlw	13
  2486     0583  00F5               	movwf	??_Lcd_Init8+1
  2487     0584  30FB               	movlw	251
  2488     0585  00F4               	movwf	??_Lcd_Init8
  2489     0586                     u677:
  2490     0586  0BF4               	decfsz	??_Lcd_Init8,f
  2491     0587  2D86               	goto	u677
  2492     0588  0BF5               	decfsz	??_Lcd_Init8+1,f
  2493     0589  2D86               	goto	u677
  2494     058A  2D8B               	nop2
  2495     058B                     l1228:
  2496                           
  2497                           ;LCD8bits.c: 49:     Lcd_Cmd8(0x30);
  2498     058B  3030               	movlw	48
  2499     058C  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2500     0591                     l1230:
  2501                           
  2502                           ;LCD8bits.c: 50:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2503     0591  301D               	movlw	29
  2504     0592  00F5               	movwf	??_Lcd_Init8+1
  2505     0593  3091               	movlw	145
  2506     0594  00F4               	movwf	??_Lcd_Init8
  2507     0595                     u687:
  2508     0595  0BF4               	decfsz	??_Lcd_Init8,f
  2509     0596  2D95               	goto	u687
  2510     0597  0BF5               	decfsz	??_Lcd_Init8+1,f
  2511     0598  2D95               	goto	u687
  2512                           
  2513                           ;LCD8bits.c: 51:     Lcd_Cmd8(0x30);
  2514     0599  3030               	movlw	48
  2515     059A  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2516                           
  2517                           ;LCD8bits.c: 53:     Lcd_Cmd8(0x3C);
  2518     059F  303C               	movlw	60
  2519     05A0  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2520                           
  2521                           ;LCD8bits.c: 57:     Lcd_Cmd8(0x0C);
  2522     05A5  300C               	movlw	12
  2523     05A6  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2524                           
  2525                           ;LCD8bits.c: 58:     Lcd_Cmd8(0x01);
  2526     05AB  3001               	movlw	1
  2527     05AC  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2528                           
  2529                           ;LCD8bits.c: 60:     Lcd_Cmd8(0x06);
  2530     05B1  3006               	movlw	6
  2531     05B2  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2532     05B7                     l123:
  2533     05B7  0008               	return
  2534     05B8                     __end_of_Lcd_Init8:
  2535                           
  2536                           	psect	text13
  2537     0413                     __ptext13:	
  2538 ;; *************** function _Lcd_Clear8 *****************
  2539 ;; Defined at:
  2540 ;;		line 28 in file "LCD8bits.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 2
  2561 ;; This function calls:
  2562 ;;		_Lcd_Cmd8
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568     0413                     _Lcd_Clear8:	
  2569                           ;psect for function _Lcd_Clear8
  2570                           
  2571     0413                     l1232:	
  2572                           ;incstack = 0
  2573                           ; Regs used in _Lcd_Clear8: [wreg+status,2+status,0+pclath+cstack]
  2574                           
  2575                           
  2576                           ;LCD8bits.c: 29:     Lcd_Cmd8(0);
  2577     0413  3000               	movlw	0
  2578     0414  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2579                           
  2580                           ;LCD8bits.c: 30:     Lcd_Cmd8(1);
  2581     0419  3001               	movlw	1
  2582     041A  120A  118A  244E  120A  118A  	fcall	_Lcd_Cmd8
  2583     041F                     l114:
  2584     041F  0008               	return
  2585     0420                     __end_of_Lcd_Clear8:
  2586                           
  2587                           	psect	text14
  2588     044E                     __ptext14:	
  2589 ;; *************** function _Lcd_Cmd8 *****************
  2590 ;; Defined at:
  2591 ;;		line 20 in file "LCD8bits.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  a               1    wreg     unsigned char 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  a               1    3[COMMON] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         1       0       0       0       0
  2607 ;;      Temps:          2       0       0       0       0
  2608 ;;      Totals:         3       0       0       0       0
  2609 ;;Total ram usage:        3 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 1
  2612 ;; This function calls:
  2613 ;;		_Lcd_Port8
  2614 ;; This function is called by:
  2615 ;;		_Lcd_Clear8
  2616 ;;		_Lcd_Set_Cursor8
  2617 ;;		_Lcd_Init8
  2618 ;;		_Lcd_Shift_Right8
  2619 ;;		_Lcd_Shift_Left8
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     044E                     _Lcd_Cmd8:	
  2624                           ;psect for function _Lcd_Cmd8
  2625                           
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _Lcd_Cmd8: [wreg+status,2+status,0+pclath+cstack]
  2629                           ;Lcd_Cmd8@a stored from wreg
  2630     044E  00F3               	movwf	Lcd_Cmd8@a
  2631     044F                     l1108:
  2632                           
  2633                           ;LCD8bits.c: 21:     PORTEbits.RE0 = 0;
  2634     044F  1283               	bcf	3,5	;RP0=0, select bank0
  2635     0450  1303               	bcf	3,6	;RP1=0, select bank0
  2636     0451  1009               	bcf	9,0	;volatile
  2637     0452                     l1110:
  2638                           
  2639                           ;LCD8bits.c: 22:     Lcd_Port8(a);
  2640     0452  0873               	movf	Lcd_Cmd8@a,w
  2641     0453  120A  118A  23EF  120A  118A  	fcall	_Lcd_Port8
  2642     0458                     l1112:
  2643                           
  2644                           ;LCD8bits.c: 23:     PORTEbits.RE1 = 1;
  2645     0458  1283               	bcf	3,5	;RP0=0, select bank0
  2646     0459  1303               	bcf	3,6	;RP1=0, select bank0
  2647     045A  1489               	bsf	9,1	;volatile
  2648     045B                     l1114:
  2649                           
  2650                           ;LCD8bits.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2651     045B  300B               	movlw	11
  2652     045C  00F2               	movwf	??_Lcd_Cmd8+1
  2653     045D  3062               	movlw	98
  2654     045E  00F1               	movwf	??_Lcd_Cmd8
  2655     045F                     u697:
  2656     045F  0BF1               	decfsz	??_Lcd_Cmd8,f
  2657     0460  2C5F               	goto	u697
  2658     0461  0BF2               	decfsz	??_Lcd_Cmd8+1,f
  2659     0462  2C5F               	goto	u697
  2660     0463  0000               	nop
  2661     0464                     l1116:
  2662                           
  2663                           ;LCD8bits.c: 25:     PORTEbits.RE1 = 0;
  2664     0464  1283               	bcf	3,5	;RP0=0, select bank0
  2665     0465  1303               	bcf	3,6	;RP1=0, select bank0
  2666     0466  1089               	bcf	9,1	;volatile
  2667     0467                     l111:
  2668     0467  0008               	return
  2669     0468                     __end_of_Lcd_Cmd8:
  2670                           
  2671                           	psect	text15
  2672     03EF                     __ptext15:	
  2673 ;; *************** function _Lcd_Port8 *****************
  2674 ;; Defined at:
  2675 ;;		line 16 in file "LCD8bits.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  a               1    wreg     unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  a               1    0[COMMON] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0
  2692 ;;      Totals:         1       0       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_Lcd_Cmd8
  2699 ;;		_Lcd_Init8
  2700 ;;		_Lcd_Write_Char8
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704     03EF                     _Lcd_Port8:	
  2705                           ;psect for function _Lcd_Port8
  2706                           
  2707                           
  2708                           ;incstack = 0
  2709                           ; Regs used in _Lcd_Port8: [wreg]
  2710                           ;Lcd_Port8@a stored from wreg
  2711     03EF  00F0               	movwf	Lcd_Port8@a
  2712     03F0                     l1094:
  2713                           
  2714                           ;LCD8bits.c: 17:     PORTD = a;
  2715     03F0  0870               	movf	Lcd_Port8@a,w
  2716     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2717     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2718     03F3  0088               	movwf	8	;volatile
  2719     03F4                     l108:
  2720     03F4  0008               	return
  2721     03F5                     __end_of_Lcd_Port8:
  2722     007E                     btemp	set	126	;btemp
  2723     007E                     wtemp0	set	126
  2724                           
  2725                           	psect	idloc
  2726                           
  2727                           ;Config register IDLOC0 @ 0x2000
  2728                           ;	unspecified, using default values
  2729     2000                     	org	8192
  2730     2000  3FFF               	dw	16383
  2731                           
  2732                           ;Config register IDLOC1 @ 0x2001
  2733                           ;	unspecified, using default values
  2734     2001                     	org	8193
  2735     2001  3FFF               	dw	16383
  2736                           
  2737                           ;Config register IDLOC2 @ 0x2002
  2738                           ;	unspecified, using default values
  2739     2002                     	org	8194
  2740     2002  3FFF               	dw	16383
  2741                           
  2742                           ;Config register IDLOC3 @ 0x2003
  2743                           ;	unspecified, using default values
  2744     2003                     	org	8195
  2745     2003  3FFF               	dw	16383
  2746                           
  2747                           	psect	config
  2748                           
  2749                           ;Config register CONFIG1 @ 0x2007
  2750                           ;	Oscillator Selection bits
  2751                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2752                           ;	Watchdog Timer Enable bit
  2753                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2754                           ;	Power-up Timer Enable bit
  2755                           ;	PWRTE = OFF, PWRT disabled
  2756                           ;	RE3/MCLR pin function select bit
  2757                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2758                           ;	Code Protection bit
  2759                           ;	CP = OFF, Program memory code protection is disabled
  2760                           ;	Data Code Protection bit
  2761                           ;	CPD = OFF, Data memory code protection is disabled
  2762                           ;	Brown Out Reset Selection bits
  2763                           ;	BOREN = OFF, BOR disabled
  2764                           ;	Internal External Switchover bit
  2765                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2766                           ;	Fail-Safe Clock Monitor Enabled bit
  2767                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2768                           ;	Low Voltage Programming Enable bit
  2769                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2770                           ;	In-Circuit Debugger Mode bit
  2771                           ;	DEBUG = 0x1, unprogramme  2772     2007                     	org	8199
  2773     2007  20D4               	dw	8404
  2774                           
  2775                           ;Config register CONFIG2 @ 0x2008
  2776                           ;	Brown-out Reset Selection bit
  2777                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2778                           ;	Flash Program Memory Self Write Enable bits
  2779                           ;	WRT = OFF, Write protection off
  2780     2008                     	org	8200
  2781     2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      66
    BANK1            80      0      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> charesc22(BANK0[15]), charesc2(BANK0[15]), charesc1(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String8@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[5]), charesc22(BANK0[15]), 
		 -> charesc2(BANK0[15]), charesc1(BANK0[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _Lcd_Write_String8->_Lcd_Write_Char8
    _Lcd_Write_Char8->_Lcd_Port8
    _Lcd_Set_Cursor8->_Lcd_Cmd8
    _Lcd_Init8->_Lcd_Cmd8
    _Lcd_Clear8->_Lcd_Cmd8
    _Lcd_Cmd8->_Lcd_Port8

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    3263
                                             13 BANK0      6     6      0
                         _Lcd_Clear8
                          _Lcd_Init8
                    _Lcd_Set_Cursor8
                  _Lcd_Write_String8
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String8                                    7     5      2     636
                                              4 COMMON     7     5      2
                    _Lcd_Write_Char8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char8                                      4     4      0      90
                                              1 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor8                                      5     4      1     634
                                              4 COMMON     3     2      1
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init8                                            2     2      0      66
                                              4 COMMON     2     2      0
                           _Lcd_Cmd8
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear8                                           0     0      0      44
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd8                                             3     3      0      44
                                              1 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port8                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear8
     _Lcd_Cmd8
       _Lcd_Port8
   _Lcd_Init8
     _Lcd_Cmd8
     _Lcd_Port8
   _Lcd_Set_Cursor8
     _Lcd_Cmd8
   _Lcd_Write_String8
     _Lcd_Write_Char8
       _Lcd_Port8
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 04 19:16:18 2023

                        pc 0002                _SSPSTATbits 0094                         l20 03FB  
                       l23 0401                         l16 0430                         l17 0435  
                       l34 0412                         l26 03FA                         l99 04AC  
                       fsr 0004           ?_Lcd_Write_Char8 0070                        l111 0467  
                      l120 0487                        l114 041F                        l123 05B7  
                      l108 03F4                        l132 0528                        l126 044D  
                      l248 0691         Lcd_Write_String8@a 0074                        l524 056C  
                      l534 04E6         Lcd_Write_String8@i 0079                        u300 0531  
                      u301 0530                        u320 0543                        u400 04CF  
                      u321 0542                        u401 04CE                        u315 0535  
                      u500 046E                        u340 0554                        u420 04E2  
                      u501 046D                        u341 0553                        u421 04E1  
                      u405 04CB                        u510 047E                        u430 05C4  
                      u511 047D                        u335 0544                        u415 04D6  
                      u431 05C3                        u520 04F4                        u280 0428  
                      u360 0568                        u440 05FC                        u281 0427  
                      u361 0567                        u345 0550                        u441 05FB  
                      u530 0516                        u290 0401                        u370 04B3  
                      u450 0622                        u291 0400                        u355 055C  
                      u371 04B2                        u451 0621                        u540 0528  
                      u460 062D                        u541 0527                        u461 062C  
                      u390 04C5                        u470 0633                        u391 04C4  
                      u471 0632                        u455 061E                        u607 0702  
                      u480 067D                        u385 04B7                        u481 067C  
                      u617 0710                        u490 068D                        u491 068C  
                      u627 0728                        u637 0735                        u557 06AA  
                      u647 07E0                        u567 06C2                        u657 0447  
                      u577 06CF                        u667 0577                        u587 06DD  
                      u677 0586                        u597 06F5                        u687 0595  
                      u697 045F                        fsr0 0004                        indf 0000  
                     l1100 042A                       l1110 0452                       l1102 042C  
                     l1112 0458                       l1120 0439                       l1104 042F  
                     l1200 0495                       l1114 045B                       l1122 043C  
                     l1210 049C                       l1202 0496                       l1106 03FB  
                     l1130 0529                       l1116 0464                       l1108 044F  
                     l1300 0471                       l1124 0442                       l1212 049D  
                     l1204 0497                       l1140 053F                       l1132 052B  
                     l1230 0591                       l1222 056D                       l1302 0478  
                     l1126 0445                       l1118 0437                       l1310 04EA  
                     l1214 049E                       l1206 049A                       l1150 0562  
                     l1142 0543                       l1134 0531                       l1232 0413  
                     l1224 0573                       l1304 047E                       l1128 044A  
                     l1312 0506                       l1216 04A2                       l1208 049B  
                     l1144 0554                       l1136 0534                       l1152 0568  
                     l1160 04B6                       l1240 05C9                       l1320 06A1  
                     l1226 057C                       l1306 0481                       l1314 050C  
                     l1218 04A3                       l1146 055A                       l1138 053B  
                     l1170 04D5                       l1162 04BD                       l1250 05F4  
                     l1242 05CE                       l1234 05BB                       l1330 06B4  
                     l1322 06A1                       l1228 058B                       l1308 04E7  
                     l1180 040A                       l1148 055B                       l1172 04DC  
                     l1164 04C1                       l1156 04AD                       l1252 05F8  
                     l1236 05BE                       l1340 06D7                       l1332 06BC  
                     l1324 06A1                       l1316 0692                       l1094 03F0  
                     l1190 048F                       l1182 040F                       l1166 04C5  
                     l1158 04B3                       l1174 04E2                       l1270 062D  
                     l1254 05FC                       l1246 05CF                       l1238 05C4  
                     l1350 06FC                       l1342 06E1                       l1334 06C6  
                     l1326 06A4                       l1318 06A1                       l1096 0421  
                     l1192 0490                       l1168 04CF                       l1280 066B  
                     l1272 0633                       l1264 0607                       l1256 0600  
                     l1248 05EC                       l1424 05E1                       l1360 0722  
                     l1352 0707                       l1344 06E7                       l1336 06C9  
                     l1328 06AE                       l1098 0428                       l1194 0491  
                     l1186 0488                       l1178 03F6                       l1282 0670  
                     l1274 0638                       l1258 0605                       l1370 075C  
                     l1362 072C                       l1354 070A                       l1346 06EF  
                     l1338 06D4                       l1196 0492                       l1188 048C  
                     l1284 0674                       l1276 063C                       l1268 0623  
                     l1380 078B                       l1372 076D                       l1364 072F  
                     l1356 0714                       l1348 06F9                       l1198 0494  
                     l1278 063F                       l1286 067D                       l1390 07B6  
                     l1382 0794                       l1374 0772                       l1366 073A  
                     l1358 071A                       l1296 0469                       l1288 068D  
                     l1392 07BE                       l1384 079C                       l1376 077A  
                     l1368 074B                       l1298 046E                       l1394 07C7  
                     l1386 07A5                       l1378 0783                       l1396 07CF  
                     l1388 07AD                       l1398 07D8                       STR_1 002D  
                     STR_2 002D                       STR_3 002D                       STR_4 0023  
                     STR_5 0028                       STR_6 001D                       _main 0692  
                     btemp 007E                       start 0000                 _Lcd_Clear8 0413  
                    ?_main 0070                      _ANSEL 0188            __end_of___lwdiv 056D  
                    _CVPOT 00A0            __end_of___lwmod 04E7                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
        _Lcd_Write_String8 04E7         ?_Lcd_Write_String8 0074            __end_of_dpowers 001D  
                    _setup 0488                      pclath 000A            __end_of_spiInit 0436  
          __end_of_spiRead 0413        ??_Lcd_Write_String8 0076                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0692           __end_of_Lcd_Cmd8 0468  
          __initialization 07EB               __end_of_main 07EB                     ??_main 005C  
__end_of_Lcd_Write_String8 0529                     ?_setup 0070                     _ANSELH 0189  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013                ?_Lcd_Clear8 0070                  ??___lwdiv 0074  
                ??___lwmod 007C                     _numero 0020           Lcd_Write_Char8@a 0073  
         Lcd_Write_Char8@y 0072           __end_of_spiWrite 03FB                  ??_spiInit 0073  
                ??_spiRead 0070                  ??_sprintf 0052    __end_of__initialization 07FC  
        __end_of_Lcd_Init8 05B8          __end_of_Lcd_Port8 03F5             __pcstackCOMMON 0070  
            __end_of_setup 04AD                  ?_Lcd_Cmd8 0070                    ??_setup 0074  
               __pbssBANK0 0020                 __pbssBANK1 00A0                 __pmaintext 0692  
        ??_Lcd_Set_Cursor8 0075                 ??_Lcd_Cmd8 0071                    _SSPSTAT 0094  
               __stringtab 0003                  ?_spiWrite 0070                    ___lwdiv 0529  
                  ___lwmod 04AD                    __ptext1 05B8                    __ptext2 04AD  
                  __ptext3 0529                    __ptext4 03F5                    __ptext5 040A  
                  __ptext6 03FB                    __ptext7 0488                    __ptext8 0420  
                  __ptext9 04E7                    _dpowers 0013                    _spiInit 0420  
                  _spiRead 040A                    _sprintf 05B8                    clrloop0 0403  
     end_of_initialization 07FC                  Lcd_Cmd8@a 0073               ??_Lcd_Clear8 0074  
               ??_spiWrite 0070           Lcd_Set_Cursor8@a 0075           Lcd_Set_Cursor8@b 0074  
                _PORTCbits 0007                  _PORTEbits 0009                  _TRISCbits 0087  
              spiWrite@dat 0070         __end_of_Lcd_Clear8 0420          ??_Lcd_Write_Char8 0071  
                _Lcd_Init8 056D                  _Lcd_Port8 03EF             _spiReceiveWait 03FB  
      start_initialization 07EB            _Lcd_Set_Cursor8 0468     __end_of_spiReceiveWait 0402  
               ?_Lcd_Init8 0070                 ?_Lcd_Port8 0070                  ___latbits 0002  
            __pcstackBANK0 004F                sprintf@flag 0056                sprintf@prec 0057  
                _charesc22 0022           ___lwdiv@dividend 0072            ?_spiReceiveWait 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 0003  
  __end_of_Lcd_Set_Cursor8 0488                   ?_spiInit 0070                   ?_spiRead 0070  
         ___lwdiv@quotient 0075                   ?_sprintf 004F       spiInit@sTransmitEdge 0072  
                clear_ram0 0402         spiInit@sDataSample 0070                ??_Lcd_Init8 0074  
              ??_Lcd_Port8 0070                __stringbase 0012                  main@esc22 0061  
          _Lcd_Write_Char8 0436                   _Lcd_Cmd8 044E         __end_of__stringtab 0013  
               sprintf@val 0058                   _charesc1 0040                   _charesc2 0031  
         ?_Lcd_Set_Cursor8 0074            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0436                   __ptext11 0468                   __ptext12 056D  
                 __ptext13 0413                   __ptext14 044E                   __ptext15 03EF  
                 _spiWrite 03F5               spiInit@sType 0073        Lcd_Set_Cursor8@temp 0076  
                 main@esc1 005F                   main@esc2 0060          spiInit@sClockIdle 0071  
  __end_of_Lcd_Write_Char8 044E                  sprintf@ap 0055                  sprintf@sp 005A  
         ___lwmod@dividend 007A           ??_spiReceiveWait 0070                  stringcode 000D  
               _OSCCONbits 008F                 Lcd_Port8@a 0070                   sprintf@c 005B  
                 sprintf@f 004F            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003  
